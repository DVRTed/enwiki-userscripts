$(() => {
  class PopupDiff {
    constructor() {
      this.init();
    }

    async init() {
      await mw.loader.using([
        "oojs-ui-core",
        "oojs-ui-windows",
        "mediawiki.diff.styles",
        "codex-styles",
      ]);
      this.windowManager = new OO.ui.WindowManager();
      $("body").append(this.windowManager.$element);
      this.add_links();
    }

    add_links() {
      const that = this;
      $(document).on(
        "touchstart click",
        ".popupdiff-popup-link",
        async function (e) {
          e.preventDefault();
          e.stopImmediatePropagation();
          e.stopPropagation();

          const href = $(this).data("href");
          await that.show_popup(href);
        }
      );

      $('a[href*="diff="], a[href*="Special:Diff/"]').each(function () {
        const $link = $(this);
        const href = $link.attr("href");
        if ($link.hasClass("popupdiff-processed")) return;
        $link.addClass("popupdiff-processed");

        const $popup_link = $("<span>")
          .text(" (popup)")
          .css({
            cursor: "pointer",
            color: "green",
            position: "relative",
            zIndex: "9999",
            background: "white",
            padding: "2px",
          })
          .on("touchstart", () => {
            $link.css("pointer-events", "none");
            setTimeout(() => {
              $link.css("pointer-events", "auto");
            }, 300);
          })
          .on("click", async (e) => {
            e.preventDefault();
            e.stopPropagation();
            await that.show_popup(href);
          });

        $link.after($popup_link);
      });
    }

    async show_popup(diff_url) {
      const dialog = new OO.ui.MessageDialog({ size: "large" });
      this.windowManager.addWindows([dialog]);
      this.windowManager.openWindow(dialog, {
        title: "popupDiff",
        message: $(
          '<div style="text-align: center; padding: 20px;">Loading diff...</div>'
        ),
        size: "larger",
        actions: [
          { action: "close", label: "Close", flags: ["safe", "close"] },
        ],
      });

      const { params, relative_diff_id } = helper.generate_params(diff_url);
      const api = new mw.Api();
      const response = await api.get(params);

      if (!(response.compare && response.compare["*"])) {
        console.error("No diff data in response:", response);
        dialog.message.$element.html(
          '<div style="text-align: center; padding: 20px; color: red;">Failed to load diff data.</div>'
        );
      }
      const raw_data = response.compare["*"];
      const $content = $("<div>")
        .append($("<div>"))
        .append(
          $("<div>")
            .addClass("fd-diff-container")
            .append(
              $("<table>")
                .addClass("diff diff-editfont-monospace diff-contentalign-left")
                .append(
                  $("<colgroup>")
                    .append($("<col>").addClass("diff-marker"))
                    .append($("<col>").addClass("diff-content"))
                    .append($("<col>").addClass("diff-marker"))
                    .append($("<col>").addClass("diff-content"))
                )
                .append($("<tbody>").html(raw_data))
            )
            .append($("<div>"))
            .append(helper.create_copy_buttons(relative_diff_id))
        );

      console.log("Diff loaded successfully");
      dialog.message.$element.html($content);
      dialog.updateSize();
    }
  }

  const helper = {
    // returns { params: {params}, relative_diff_id: X };
    generate_params: (diff_url) => {
      const diff_match = diff_url.match(/[?&]diff=(\d+|prev)/i);
      // if it's a link generated by [[Special:Diff/X]]
      const special_diff_match = diff_url.match(/Special:Diff\/(\d+)/i);
      const oldid_match = diff_url.match(/[?&]oldid=(\d+)/i);

      if (!(diff_match || special_diff_match)) {
        console.error("Couldn't extract diff id");
        return;
      }

      const diff_value = diff_match ? diff_match[1] : special_diff_match[1];
      const old_id = oldid_match ? oldid_match[1] : null;

      let relative_diff_id = diff_value;

      const params = {
        action: "compare",
        format: "json",
        prop: "diff",
      };

      if (diff_value === "prev") {
        if (!old_id) return; // "prev" requires oldid
        params.fromrev = old_id;
        params.torelative = diff_value;
        relative_diff_id = old_id;
      } else {
        if (old_id) {
          params.fromrev = old_id;
          params.torev = diff_value;
        } else {
          params.fromrev = diff_value;
          params.torelative = "prev";
        }
      }
      return { params, relative_diff_id };
    },
    create_copy_buttons: (relative_diff_id) => {
      return $("<div>")
        .css({
          padding: "10px",
          borderBottom: "1px solid #ccc",
          marginBottom: "10px",
        })
        .append(
          $("<div>")
            .css({ marginBottom: "8px" })
            .append(
              $("<label>")
                .text("Diff wikilink: ")
                .css({ display: "inline-block", width: "100px" })
            )
            .append(
              $("<input>")
                .addClass("cdx-text-input__input")
                .attr({
                  type: "text",
                  readonly: true,
                  value: `[[Special:Diff/${relative_diff_id}]]`,
                })
                .on("click", function () {
                  this.select();
                })
            )
        )

        .append(
          $("<div>")
            .css({ marginBottom: "8px" })
            .append(
              $("<label>")
                .text("Short diff link: ")
                .css({ display: "inline-block", width: "100px" })
            )
            .append(
              $("<input>")
                .addClass("cdx-text-input__input")
                .attr({
                  type: "text",
                  readonly: true,
                  value: `https://en.wikipedia.org/?diff=${relative_diff_id}`,
                })
                .on("click", function () {
                  this.select();
                })
            )
        );
    },
  };

  new PopupDiff();
})();
